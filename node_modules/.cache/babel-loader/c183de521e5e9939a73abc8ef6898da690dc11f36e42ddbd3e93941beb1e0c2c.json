{"ast":null,"code":"var _jsxFileName = \"/Users/embl/PycharmProjects/GIDE/UIdataportal/container-viewer/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [containerNames, setContainerNames] = useState([]); // List of container names\n  const [selectedContainer, setSelectedContainer] = useState(''); // Selected container name\n  const [results, setResults] = useState(null); // API results\n\n  // Mock function to fetch distinct container names (replace with your API endpoint if needed)\n  const fetchContainerNames = async () => {\n    try {\n      // Example: Fetch container names from the API\n      const response = await axios.get('https://idr-testing.openmicroscopy.org/searchengine2/api/v1/resources/containers');\n      setContainerNames(response.data); // Assume the response is an array of container names\n    } catch (error) {\n      console.error('Error fetching container names:', error);\n    }\n  };\n\n  // Function to fetch data for the selected container\n  const fetchContainerData = async containerName => {\n    try {\n      const response = await axios.post(`https://idr-testing.openmicroscopy.org/searchengine2/api/v1/resources/sub_container_images/`, null, {\n        params: {\n          container_name: containerName\n        },\n        headers: {\n          accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n      setResults(response.data); // Assume the response is JSON data\n    } catch (error) {\n      console.error('Error fetching container data:', error);\n    }\n  };\n\n  // Fetch container names on component mount\n  useEffect(() => {\n    fetchContainerNames();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Container Data Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"container-select\",\n        children: \"Select a Container:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"container-select\",\n        value: selectedContainer,\n        onChange: e => {\n          setSelectedContainer(e.target.value);\n          fetchContainerData(e.target.value);\n        },\n        style: {\n          marginLeft: '10px',\n          padding: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select a container --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), containerNames.map(name => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: name,\n          children: name\n        }, name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Results:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), results ? /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          background: '#f4f4f4',\n          padding: '10px',\n          borderRadius: '5px'\n        },\n        children: JSON.stringify(results, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data to display. Select a container to view results.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"n+D97hsAENvYOyBGiPmjbPwdxWI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","containerNames","setContainerNames","selectedContainer","setSelectedContainer","results","setResults","fetchContainerNames","response","get","data","error","console","fetchContainerData","containerName","post","params","container_name","headers","accept","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","id","value","onChange","e","target","marginLeft","map","name","background","borderRadius","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/embl/PycharmProjects/GIDE/UIdataportal/container-viewer/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [containerNames, setContainerNames] = useState([]); // List of container names\n  const [selectedContainer, setSelectedContainer] = useState(''); // Selected container name\n  const [results, setResults] = useState(null); // API results\n\n  // Mock function to fetch distinct container names (replace with your API endpoint if needed)\n  const fetchContainerNames = async () => {\n    try {\n      // Example: Fetch container names from the API\n      const response = await axios.get('https://idr-testing.openmicroscopy.org/searchengine2/api/v1/resources/containers');\n      setContainerNames(response.data); // Assume the response is an array of container names\n    } catch (error) {\n      console.error('Error fetching container names:', error);\n    }\n  };\n\n  // Function to fetch data for the selected container\n  const fetchContainerData = async (containerName) => {\n    try {\n      const response = await axios.post(\n        `https://idr-testing.openmicroscopy.org/searchengine2/api/v1/resources/sub_container_images/`,\n        null,\n        {\n          params: { container_name: containerName },\n          headers: {\n            accept: 'application/json',\n            'Content-Type': 'application/json',\n          },\n        }\n      );\n      setResults(response.data); // Assume the response is JSON data\n    } catch (error) {\n      console.error('Error fetching container data:', error);\n    }\n  };\n\n  // Fetch container names on component mount\n  useEffect(() => {\n    fetchContainerNames();\n  }, []);\n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\n      <h1>Container Data Viewer</h1>\n\n      {/* Dropdown for container names */}\n      <div style={{ marginBottom: '20px' }}>\n        <label htmlFor=\"container-select\">Select a Container:</label>\n        <select\n          id=\"container-select\"\n          value={selectedContainer}\n          onChange={(e) => {\n            setSelectedContainer(e.target.value);\n            fetchContainerData(e.target.value);\n          }}\n          style={{ marginLeft: '10px', padding: '5px' }}\n        >\n          <option value=\"\">-- Select a container --</option>\n          {containerNames.map((name) => (\n            <option key={name} value={name}>\n              {name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Display results */}\n      <div>\n        <h2>Results:</h2>\n        {results ? (\n          <pre style={{ background: '#f4f4f4', padding: '10px', borderRadius: '5px' }}>\n            {JSON.stringify(results, null, 2)}\n          </pre>\n        ) : (\n          <p>No data to display. Select a container to view results.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACS,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChE,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMa,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,kFAAkF,CAAC;MACpHP,iBAAiB,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAG,MAAOC,aAAa,IAAK;IAClD,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMZ,KAAK,CAACmB,IAAI,CAC/B,6FAA6F,EAC7F,IAAI,EACJ;QACEC,MAAM,EAAE;UAAEC,cAAc,EAAEH;QAAc,CAAC;QACzCI,OAAO,EAAE;UACPC,MAAM,EAAE,kBAAkB;UAC1B,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MACDb,UAAU,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACdY,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKsB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAoB,CAAE;IAAAC,QAAA,gBAC/DzB,OAAA;MAAAyB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG9B7B,OAAA;MAAKsB,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,gBACnCzB,OAAA;QAAO+B,OAAO,EAAC,kBAAkB;QAAAN,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7D7B,OAAA;QACEgC,EAAE,EAAC,kBAAkB;QACrBC,KAAK,EAAE5B,iBAAkB;QACzB6B,QAAQ,EAAGC,CAAC,IAAK;UACf7B,oBAAoB,CAAC6B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UACpClB,kBAAkB,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QACpC,CAAE;QACFX,KAAK,EAAE;UAAEe,UAAU,EAAE,MAAM;UAAEd,OAAO,EAAE;QAAM,CAAE;QAAAE,QAAA,gBAE9CzB,OAAA;UAAQiC,KAAK,EAAC,EAAE;UAAAR,QAAA,EAAC;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACjD1B,cAAc,CAACmC,GAAG,CAAEC,IAAI,iBACvBvC,OAAA;UAAmBiC,KAAK,EAAEM,IAAK;UAAAd,QAAA,EAC5Bc;QAAI,GADMA,IAAI;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN7B,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBtB,OAAO,gBACNP,OAAA;QAAKsB,KAAK,EAAE;UAAEkB,UAAU,EAAE,SAAS;UAAEjB,OAAO,EAAE,MAAM;UAAEkB,YAAY,EAAE;QAAM,CAAE;QAAAhB,QAAA,EACzEiB,IAAI,CAACC,SAAS,CAACpC,OAAO,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,gBAEN7B,OAAA;QAAAyB,QAAA,EAAG;MAAuD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC9D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA/EID,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAiFT,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}